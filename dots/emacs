;; .Emacs
;;; ################################## GLOBAL CONFIG ########################################
;;; uncomment this line to disable loading of "default.el" at startup
 (setq inhibit-default-init t)

;; enable visual feedback on selections
(setq transient-mark-mode t)

;; default to better frame titles
(setq frame-title-format
      (concat  "%b - emacs@" (system-name)))

;; default to unified diffs
(setq diff-switches "-u")

;; always end a file with a newline
(setq require-final-newline 'query)

;; packages
(require 'package)
(dolist (source '(("marmalade" . "http://marmalade-repo.org/packages/")
		  ("elpa" . "http://tromey.com/elpa/")
		  ("melpa" . "http://melpa.milkbox.net/packages/")
		  ))
  (add-to-list 'package-archives source t))
(package-initialize)
(add-to-list 'load-path "~/.emacs.d/lisp")

;; Speedbar
(sr-speedbar-open)

(setq x-select-enable-clipboard t)
(put 'upcase-region 'disabled nil)

;; Saves. Not in .emacs.d!!
(make-directory "~/.saves/" t)
(setq backup-directory-alist `(("." . "~/.saves/")))

;; Sr-speedbar no refresh
(custom-set-variables
 '(sr-speedbar-auto-refresh nil)
 '(inhibit-startup-screen t))

;;; ################################## MISC UTILITIES ########################################

; mouse integration
(require 'mouse)
(xterm-mouse-mode t)
(defun track-mouse (e))
(setq mouse-sel-mode t)

; enable wheel
(defun up-slightly () (interactive) (scroll-up 5))
(defun down-slightly () (interactive) (scroll-down 5))
(global-set-key (kbd "<mouse-4>") 'down-slightly)
(global-set-key (kbd "<mouse-5>") 'up-slightly)

; enable wheel-click pasting
(global-set-key (kbd "<mouse-2>") 'x-clipboard-yank)

; move lines
(defun move-text-internal (arg)
  (cond
   ((and mark-active transient-mark-mode)
    (if (> (point) (mark))
        (exchange-point-and-mark))
    (let ((column (current-column))
          (text (delete-and-extract-region (point) (mark))))
      (forward-line arg)
      (move-to-column column t)
      (set-mark (point))
      (insert text)
      (exchange-point-and-mark)
      (setq deactivate-mark nil)))
   (t
    (let ((column (current-column)))
      (beginning-of-line)
      (when (or (> arg 0) (not (bobp)))
        (forward-line)
        (when (or (< arg 0) (not (eobp)))
          (transpose-lines arg)
          (when (and (eval-when-compile
                       '(and (>= emacs-major-version 24)
                             (>= emacs-minor-version 3)))
                     (< arg 0))
            (forward-line -1)))
        (forward-line -1))
      (move-to-column column t)))))

(defun move-text-down (arg)
  "Move region (transient-mark-mode active) or current line
  arg lines down."
  (interactive "*p")
  (move-text-internal arg))

(defun move-text-up (arg)
  "Move region (transient-mark-mode active) or current line
  arg lines up."
  (interactive "*p")
  (move-text-internal (- arg)))

; move lines
(global-set-key [M-S-up] 'move-text-up)
(global-set-key [M-S-down] 'move-text-down)

; compile with C-F9
(global-set-key (kbd "C-<f9>") 'compile)

; terminal with C-F2
(global-set-key (kbd "C-<f2>") 'ansi-term)

; menus with C-F10
(global-set-key (kbd "C-<f10>") 'menu-bar-open)

; Move between buffers in a cool way
(global-set-key (kbd "C-<left>")  'windmove-left)
(global-set-key (kbd "C-<right>") 'windmove-right)
(global-set-key (kbd "C-<up>")    'windmove-up)
(global-set-key (kbd "C-<down>")  'windmove-down)

;;; ################################## MODE CONFIG ########################################

;;; ###JS2-MODE###
(setq js2-highlight-level 3)

(add-hook 'js-mode-hook 'js2-minor-mode)
(add-hook 'js2-mode-hook 'ac-js2-mode)
(add-hook 'js2-mode-hook 'js2-refactor-mode)
;(add-hook 'js2-mode-hook 'js2-jsx-mode)

;;(add-hook 'js-mode-hook (lambda () (tern-mode t)))
;;(eval-after-load 'tern
;;  '(progn
;;     (require 'tern-auto-complete)
;;     (tern-ac-setup)))

(js2r-add-keybindings-with-prefix "C-c C-m")

(global-set-key (kbd "C-j") 'js2-jump-to-definition)

;;Temporally disabled
;(require 'editorconfig)
;(editorconfig-mode 1)

;;(add-hook 'web-mode-hook (lambda () (tern-mode t)))

;;(eval-after-load 'tern
;;  '(progn
;;(require 'tern-auto-complete)
;;     (tern-ac-setup)))

;; ###OCTAVE-MODE###
;; Extra octave goodies :)
(add-hook 'octave-mode-hook
          (lambda ()
            (abbrev-mode 1)
            (auto-fill-mode 1)
            (if (eq window-system 'x)
                (font-lock-mode 1))))

;; ###CIAO-MODE###
(add-to-list 'load-path "~/.emacs.d/ciao/")
(load "ciao") ;; best not to include the ending “.el” or “.elc”


;;; ################################## FILES ########################################
(add-to-list 'auto-mode-alist '("\\.json$" . js2-mode))
(add-to-list 'auto-mode-alist '("\\.js\\'" . js2-mode))
(add-to-list 'auto-mode-alist '("\\.html\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.m$" . octave-mode))
(add-to-list 'auto-mode-alist '("\\.pl$" . ciao-mode))

